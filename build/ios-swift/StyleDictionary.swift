
//
// StyleDictionary.swift
//
// Do not edit directly
// Generated on Mon, 26 Apr 2021 10:17:35 GMT
//


import UIKit

public class StyleDictionary {
    public static let bodyExtraBoldCondensedItalicFontFamily = Akzidenz-Grotesk Pro
    public static let bodyExtraBoldCondensedItalicFontSize = 12
    public static let bodyExtraBoldCondensedItalicFontStretch = condensed
    public static let bodyExtraBoldCondensedItalicFontStyle = italic
    public static let bodyExtraBoldCondensedItalicFontStyleOld = Extra Bold Condensed Italic
    public static let bodyExtraBoldCondensedItalicFontWeight = 800
    public static let bodyExtraBoldCondensedItalicLetterSpacing = 0
    public static let bodyExtraBoldCondensedItalicLineHeight = normal
    public static let bodyExtraBoldCondensedItalicParagraphIndent = 0
    public static let bodyExtraBoldCondensedItalicParagraphSpacing = 0
    public static let bodyExtraBoldCondensedItalicTextCase = none
    public static let bodyExtraBoldCondensedItalicTextDecoration = none
    public static let bodyH3FontFamily = Akzidenz-Grotesk Pro
    public static let bodyH3FontSize = 20
    public static let bodyH3FontStretch = condensed
    public static let bodyH3FontStyle = normal
    public static let bodyH3FontStyleOld = Bold Condensed
    public static let bodyH3FontWeight = 700
    public static let bodyH3LetterSpacing = 2
    public static let bodyH3LineHeight = 160
    public static let bodyH3ParagraphIndent = 5
    public static let bodyH3ParagraphSpacing = 8
    public static let bodyH3TextCase = uppercase
    public static let bodyH3TextDecoration = none
    public static let bodyH4StrikeThroughFontFamily = Roboto
    public static let bodyH4StrikeThroughFontSize = 16
    public static let bodyH4StrikeThroughFontStretch = normal
    public static let bodyH4StrikeThroughFontStyle = italic
    public static let bodyH4StrikeThroughFontStyleOld = Medium Italic
    public static let bodyH4StrikeThroughFontWeight = 500
    public static let bodyH4StrikeThroughLetterSpacing = 0
    public static let bodyH4StrikeThroughLineHeight = normal
    public static let bodyH4StrikeThroughParagraphIndent = 0
    public static let bodyH4StrikeThroughParagraphSpacing = 0
    public static let bodyH4StrikeThroughTextCase = none
    public static let bodyH4StrikeThroughTextDecoration = line-through
    public static let bodyItalicFontFamily = Roboto
    public static let bodyItalicFontSize = 12
    public static let bodyItalicFontStretch = normal
    public static let bodyItalicFontStyle = italic
    public static let bodyItalicFontStyleOld = Italic
    public static let bodyItalicFontWeight = 400
    public static let bodyItalicLetterSpacing = 0
    public static let bodyItalicLineHeight = normal
    public static let bodyItalicParagraphIndent = 0
    public static let bodyItalicParagraphSpacing = 0
    public static let bodyItalicTextCase = none
    public static let bodyItalicTextDecoration = none
    public static let bodyMediumExtendedItalicFontFamily = Akzidenz-Grotesk Pro
    public static let bodyMediumExtendedItalicFontSize = 20
    public static let bodyMediumExtendedItalicFontStretch = expanded
    public static let bodyMediumExtendedItalicFontStyle = italic
    public static let bodyMediumExtendedItalicFontStyleOld = Medium Extended Italic
    public static let bodyMediumExtendedItalicFontWeight = 500
    public static let bodyMediumExtendedItalicLetterSpacing = 0
    public static let bodyMediumExtendedItalicLineHeight = normal
    public static let bodyMediumExtendedItalicParagraphIndent = 0
    public static let bodyMediumExtendedItalicParagraphSpacing = 0
    public static let bodyMediumExtendedItalicTextCase = none
    public static let bodyMediumExtendedItalicTextDecoration = none
    public static let bodySuperFontFamily = Akzidenz-Grotesk Pro
    public static let bodySuperFontSize = 22
    public static let bodySuperFontStretch = normal
    public static let bodySuperFontStyle = normal
    public static let bodySuperFontStyleOld = Super
    public static let bodySuperFontWeight = 900
    public static let bodySuperLetterSpacing = 0
    public static let bodySuperLineHeight = normal
    public static let bodySuperParagraphIndent = 0
    public static let bodySuperParagraphSpacing = 0
    public static let bodySuperTextCase = none
    public static let bodySuperTextDecoration = none
    public static let bordersDashedOutsideDashPattern = 5,5,3,3
    public static let bordersDashedOutsideStroke = rgba(64, 255, 186, 1)
    public static let bordersDashedOutsideStrokeAlign = outside
    public static let bordersDashedOutsideStrokeCap = none
    public static let bordersDashedOutsideStrokeJoin = miter
    public static let bordersDashedOutsideStrokeMiterLimit = 4
    public static let bordersDashedOutsideStrokeWeight = 1
    public static let bordersSingleDashPattern = 
    public static let bordersSingleStroke = rgba(112, 141, 242, 1)
    public static let bordersSingleStrokeAlign = inside
    public static let bordersSingleStrokeCap = none
    public static let bordersSingleStrokeJoin = miter
    public static let bordersSingleStrokeMiterLimit = 4
    public static let bordersSingleStrokeWeight = 1
    public static let bordersSingleStyleDashPattern = 
    public static let bordersSingleStyleStroke = rgba(4, 74, 255, 1)
    public static let bordersSingleStyleStrokeAlign = inside
    public static let bordersSingleStyleStrokeCap = none
    public static let bordersSingleStyleStrokeJoin = miter
    public static let bordersSingleStyleStrokeMiterLimit = 4
    public static let bordersSingleStyleStrokeWeight = 1
    public static let bordersUnsupportedGradientBordersDashPattern = 
    public static let bordersUnsupportedGradientBordersStrokeAlign = inside
    public static let bordersUnsupportedGradientBordersStrokeCap = none
    public static let bordersUnsupportedGradientBordersStrokeJoin = miter
    public static let bordersUnsupportedGradientBordersStrokeMiterLimit = 4
    public static let bordersUnsupportedGradientBordersStrokeWeight = 1
    public static let bordersUnsupportedImageBordersDashPattern = 
    public static let bordersUnsupportedImageBordersStrokeAlign = inside
    public static let bordersUnsupportedImageBordersStrokeCap = none
    public static let bordersUnsupportedImageBordersStrokeJoin = miter
    public static let bordersUnsupportedImageBordersStrokeMiterLimit = 4
    public static let bordersUnsupportedImageBordersStrokeWeight = 1
    public static let bordersUnsupportedMultipleBordersDashPattern = 5,10
    public static let bordersUnsupportedMultipleBordersStroke = rgba(255, 230, 0, 1)
    public static let bordersUnsupportedMultipleBordersStrokeAlign = inside
    public static let bordersUnsupportedMultipleBordersStrokeCap = none
    public static let bordersUnsupportedMultipleBordersStrokeJoin = miter
    public static let bordersUnsupportedMultipleBordersStrokeMiterLimit = 4
    public static let bordersUnsupportedMultipleBordersStrokeWeight = 1
    public static let colorsMultipleFills0 = rgba(64, 255, 186, 1)
    public static let colorsMultipleFills1 = rgba(0, 0, 0, 0.1)
    public static let colorsSingleBlue = rgba(4, 74, 255, 1)
    public static let colorsSpecialCharactersAnderung = rgba(52, 86, 175, 1)
    public static let colorsSpecialCharactersðŸ˜… = rgba(64, 223, 80, 1)
    public static let effectBackgroundBlurRadius = 4
    public static let effectBackgroundBlurType = backgroundBlur
    public static let effectDropShadowSingleColor = rgba(0, 0, 0, 0.25)
    public static let effectDropShadowSingleOffsetX = 0
    public static let effectDropShadowSingleOffsetY = 4
    public static let effectDropShadowSingleRadius = 4
    public static let effectDropShadowSingleSpread = 0
    public static let effectDropShadowSingleType = dropShadow
    public static let effectInnerShadowMultiple0Color = rgba(0, 0, 0, 0.25)
    public static let effectInnerShadowMultiple0OffsetX = 0
    public static let effectInnerShadowMultiple0OffsetY = 4
    public static let effectInnerShadowMultiple0Radius = 4
    public static let effectInnerShadowMultiple0Spread = 0
    public static let effectInnerShadowMultiple0Type = innerShadow
    public static let effectInnerShadowMultiple1Color = rgba(0, 0, 0, 1)
    public static let effectInnerShadowMultiple1OffsetX = 10
    public static let effectInnerShadowMultiple1OffsetY = 100
    public static let effectInnerShadowMultiple1Radius = 1
    public static let effectInnerShadowMultiple1Spread = 0.5
    public static let effectInnerShadowMultiple1Type = innerShadow
    public static let effectInnerShadowMultiple2Color = rgba(0, 0, 0, 0.25)
    public static let effectInnerShadowMultiple2OffsetX = -4
    public static let effectInnerShadowMultiple2OffsetY = 2
    public static let effectInnerShadowMultiple2Radius = 3
    public static let effectInnerShadowMultiple2Spread = 11
    public static let effectInnerShadowMultiple2Type = innerShadow
    public static let effectLayerBlurRadius = 4
    public static let effectLayerBlurType = layerBlur
    public static let fsBaseFontFamily = Inter
    public static let fsBaseFontSize = 16
    public static let fsBaseFontStretch = normal
    public static let fsBaseFontStyle = normal
    public static let fsBaseFontStyleOld = Regular
    public static let fsBaseFontWeight = 400
    public static let fsBaseLetterSpacing = 0
    public static let fsBaseLineHeight = 24
    public static let fsBaseParagraphIndent = 0
    public static let fsBaseParagraphSpacing = 0
    public static let fsBaseTextCase = none
    public static let fsBaseTextDecoration = none
    public static let fsLgFontNormalFontFamily = Inter
    public static let fsLgFontNormalFontSize = 24
    public static let fsLgFontNormalFontStretch = normal
    public static let fsLgFontNormalFontStyle = normal
    public static let fsLgFontNormalFontStyleOld = Regular
    public static let fsLgFontNormalFontWeight = 400
    public static let fsLgFontNormalLetterSpacing = 0
    public static let fsLgFontNormalLineHeight = 32
    public static let fsLgFontNormalParagraphIndent = 0
    public static let fsLgFontNormalParagraphSpacing = 0
    public static let fsLgFontNormalTextCase = none
    public static let fsLgFontNormalTextDecoration = none
    public static let fsLgFontSemiboldFontFamily = Inter
    public static let fsLgFontSemiboldFontSize = 24
    public static let fsLgFontSemiboldFontStretch = normal
    public static let fsLgFontSemiboldFontStyle = normal
    public static let fsLgFontSemiboldFontStyleOld = Semi Bold
    public static let fsLgFontSemiboldFontWeight = 600
    public static let fsLgFontSemiboldLetterSpacing = 0
    public static let fsLgFontSemiboldLineHeight = 32
    public static let fsLgFontSemiboldParagraphIndent = 0
    public static let fsLgFontSemiboldParagraphSpacing = 0
    public static let fsLgFontSemiboldTextCase = none
    public static let fsLgFontSemiboldTextDecoration = none
    public static let fsXlFontNormalFontFamily = Inter
    public static let fsXlFontNormalFontSize = 40
    public static let fsXlFontNormalFontStretch = normal
    public static let fsXlFontNormalFontStyle = normal
    public static let fsXlFontNormalFontStyleOld = Regular
    public static let fsXlFontNormalFontWeight = 400
    public static let fsXlFontNormalLetterSpacing = -4
    public static let fsXlFontNormalLineHeight = 48
    public static let fsXlFontNormalParagraphIndent = 0
    public static let fsXlFontNormalParagraphSpacing = 0
    public static let fsXlFontNormalTextCase = none
    public static let fsXlFontNormalTextDecoration = none
    public static let fsXlFontSemiboldFontFamily = Inter
    public static let fsXlFontSemiboldFontSize = 40
    public static let fsXlFontSemiboldFontStretch = normal
    public static let fsXlFontSemiboldFontStyle = normal
    public static let fsXlFontSemiboldFontStyleOld = Semi Bold
    public static let fsXlFontSemiboldFontWeight = 600
    public static let fsXlFontSemiboldLetterSpacing = -2
    public static let fsXlFontSemiboldLineHeight = 48
    public static let fsXlFontSemiboldParagraphIndent = 0
    public static let fsXlFontSemiboldParagraphSpacing = 0
    public static let fsXlFontSemiboldTextCase = none
    public static let fsXlFontSemiboldTextDecoration = none
    public static let gradientMultiple0GradientType = linear
    public static let gradientMultiple0Opacity = 1
    public static let gradientMultiple0Stops0Color = rgba(255, 184, 0, 1)
    public static let gradientMultiple0Stops0Position = 0
    public static let gradientMultiple0Stops1Color = rgba(255, 184, 0, 1)
    public static let gradientMultiple0Stops1Position = 1
    public static let gradientMultiple1GradientType = radial
    public static let gradientMultiple1Opacity = 1
    public static let gradientMultiple1Stops0Color = rgba(255, 255, 255, 1)
    public static let gradientMultiple1Stops0Position = 0
    public static let gradientMultiple1Stops1Color = rgba(255, 255, 255, 1)
    public static let gradientMultiple1Stops1Position = 1
    public static let gradientMultiple2GradientType = angular
    public static let gradientMultiple2Opacity = 1
    public static let gradientMultiple2Stops0Color = rgba(207, 48, 48, 1)
    public static let gradientMultiple2Stops0Position = 0
    public static let gradientMultiple2Stops1Color = rgba(255, 255, 255, 1)
    public static let gradientMultiple2Stops1Position = 1
    public static let gradientMultiple3GradientType = diamond
    public static let gradientMultiple3Opacity = 1
    public static let gradientMultiple3Stops0Color = rgba(74, 79, 204, 1)
    public static let gradientMultiple3Stops0Position = 0
    public static let gradientMultiple3Stops1Color = rgba(255, 255, 255, 1)
    public static let gradientMultiple3Stops1Position = 1
    public static let gradientSingleWithMultipleColorStopsGradientType = radial
    public static let gradientSingleWithMultipleColorStopsOpacity = 1
    public static let gradientSingleWithMultipleColorStopsStops0Color = rgba(255, 184, 0, 1)
    public static let gradientSingleWithMultipleColorStopsStops0Position = 0
    public static let gradientSingleWithMultipleColorStopsStops1Color = rgba(255, 138, 0, 1)
    public static let gradientSingleWithMultipleColorStopsStops1Position = 0.34
    public static let gradientSingleWithMultipleColorStopsStops2Color = rgba(255, 46, 0, 1)
    public static let gradientSingleWithMultipleColorStopsStops2Position = 0.65
    public static let gradientSingleWithMultipleColorStopsStops3Color = rgba(255, 0, 0, 1)
    public static let gradientSingleWithMultipleColorStopsStops3Position = 1
    public static let gray100 = rgba(243, 244, 246, 1)
    public static let gray600 = rgba(75, 85, 99, 1)
    public static let gray900 = rgba(17, 24, 39, 1)
    public static let gridMultiple0Alignment = max
    public static let gridMultiple0Count = 7
    public static let gridMultiple0GutterSize = 20
    public static let gridMultiple0Offset = 3
    public static let gridMultiple0Pattern = columns
    public static let gridMultiple0SectionSize = 1
    public static let gridMultiple1Alignment = center
    public static let gridMultiple1Count = 6
    public static let gridMultiple1GutterSize = 20
    public static let gridMultiple1Pattern = columns
    public static let gridMultiple1SectionSize = 12
    public static let gridMultiple2Alignment = stretch
    public static let gridMultiple2Count = 5
    public static let gridMultiple2GutterSize = 20
    public static let gridMultiple2Offset = 10
    public static let gridMultiple2Pattern = columns
    public static let gridMultiple3Alignment = min
    public static let gridMultiple3Count = 4
    public static let gridMultiple3GutterSize = 20
    public static let gridMultiple3Offset = 13
    public static let gridMultiple3Pattern = columns
    public static let gridMultiple3SectionSize = 34
    public static let gridMultiple4Alignment = max
    public static let gridMultiple4Count = 5
    public static let gridMultiple4GutterSize = 20
    public static let gridMultiple4Offset = 10
    public static let gridMultiple4Pattern = rows
    public static let gridMultiple4SectionSize = 8
    public static let gridMultiple5Alignment = center
    public static let gridMultiple5Count = 4
    public static let gridMultiple5GutterSize = 10
    public static let gridMultiple5Pattern = rows
    public static let gridMultiple5SectionSize = 8
    public static let gridMultiple6Alignment = min
    public static let gridMultiple6Count = 3
    public static let gridMultiple6GutterSize = 20
    public static let gridMultiple6Offset = 10
    public static let gridMultiple6Pattern = rows
    public static let gridMultiple6SectionSize = 8
    public static let gridMultiple7Pattern = grid
    public static let gridMultiple7SectionSize = 8
    public static let gridSingleAlignment = center
    public static let gridSingleCount = 5
    public static let gridSingleGutterSize = 20
    public static let gridSinglePattern = columns
    public static let gridSingleSectionSize = 11
    public static let motionDissolveDuration = 0.45
    public static let motionDissolveEasing = cubic-bezier
    public static let motionDissolveEasingFunctionX1 = 0.6968395709991455
    public static let motionDissolveEasingFunctionX2 = 0.06683959811925888
    public static let motionDissolveEasingFunctionY1 = 0.052326660603284836
    public static let motionDissolveEasingFunctionY2 = 0.9323266744613647
    public static let motionDissolveType = dissolve
    public static let motionMoveInDirection = left
    public static let motionMoveInDuration = 0.5
    public static let motionMoveInEasing = ease-in
    public static let motionMoveInEasingFunctionX1 = 0.41999998688697815
    public static let motionMoveInEasingFunctionX2 = 1
    public static let motionMoveInEasingFunctionY1 = 0
    public static let motionMoveInEasingFunctionY2 = 1
    public static let motionMoveInType = move_in
    public static let motionPushDirection = left
    public static let motionPushDuration = 0.5
    public static let motionPushEasing = ease-in-back
    public static let motionPushEasingFunctionX1 = 0.30000001192092896
    public static let motionPushEasingFunctionX2 = 0.699999988079071
    public static let motionPushEasingFunctionY1 = -0.05000000074505806
    public static let motionPushEasingFunctionY2 = -0.5
    public static let motionPushType = push
    public static let motionSmartDuration = 0.5
    public static let motionSmartEasing = linear
    public static let motionSmartEasingFunctionX1 = 0
    public static let motionSmartEasingFunctionX2 = 1
    public static let motionSmartEasingFunctionY1 = 0
    public static let motionSmartEasingFunctionY2 = 1
    public static let motionSmartType = smart_animate
    public static let radii5RadiiBottomLeft = 5
    public static let radii5RadiiBottomRight = 5
    public static let radii5RadiiTopLeft = 5
    public static let radii5RadiiTopRight = 5
    public static let radii5Radius = 5
    public static let radii5RadiusType = single
    public static let radii5Smoothing = 0
    public static let radiiMixedRadiiBottomLeft = 0
    public static let radiiMixedRadiiBottomRight = 3.5
    public static let radiiMixedRadiiTopLeft = 1
    public static let radiiMixedRadiiTopRight = 2
    public static let radiiMixedRadiusType = mixed
    public static let radiiMixedSmoothing = 0
    public static let radiiSameWithSmoothingRadiiBottomLeft = 5
    public static let radiiSameWithSmoothingRadiiBottomRight = 5
    public static let radiiSameWithSmoothingRadiiTopLeft = 5
    public static let radiiSameWithSmoothingRadiiTopRight = 5
    public static let radiiSameWithSmoothingRadius = 5
    public static let radiiSameWithSmoothingRadiusType = single
    public static let radiiSameWithSmoothingSmoothing = 0.65
    public static let radiiSmoothingRadiiBottomLeft = 10
    public static let radiiSmoothingRadiiBottomRight = 10
    public static let radiiSmoothingRadiiTopLeft = 10
    public static let radiiSmoothingRadiiTopRight = 10
    public static let radiiSmoothingRadius = 10
    public static let radiiSmoothingRadiusType = single
    public static let radiiSmoothingSmoothing = 0.75
    public static let sizes32 = 32.72
    public static let sizes40 = 40
    public static let sizes60 = 60
    public static let sizes80 = 80
    public static let sizesFrame = 32
    public static let sizesRect = 32
    public static let sizesShapeInComponent = 32
    public static let spacing10Bottom = 10
    public static let spacing10Left = 10
    public static let spacing10Right = 10
    public static let spacing10Top = 10
    public static let spacingMixedBottom = 30
    public static let spacingMixedLeft = 20
    public static let spacingMixedRight = 20
    public static let spacingMixedTop = 10
    public static let spacingTopBottom = 0
    public static let spacingTopLeft = 0
    public static let spacingTopRight = 0
    public static let spacingTopTop = 10
}
